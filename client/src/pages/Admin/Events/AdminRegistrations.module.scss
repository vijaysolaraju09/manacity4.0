.page {
  display: flex;
  flex-direction: column;
  gap: 1.5rem;
  padding: 1.5rem;
  color: #e5e7eb;
}

.header {
  display: flex;
  justify-content: space-between;
  align-items: flex-start;
  gap: 1rem;
  flex-wrap: wrap;
}

.header h2 {
  margin: 0;
  font-size: 1.5rem;
  color: #f8fafc;
}

.header p {
  margin: 0.3rem 0 0;
  color: rgba(203, 213, 225, 0.78);
}

.headerActions {
  display: inline-flex;
  align-items: center;
  gap: 0.75rem;
}

.meta {
  font-size: 0.85rem;
  color: rgba(148, 163, 184, 0.85);
  display: inline-flex;
  align-items: center;
  gap: 0.4rem;
}

.secondaryBtn,
.primaryBtn {
  border-radius: 0.85rem;
  padding: 0.55rem 1.2rem;
  font-weight: 600;
  border: none;
  display: inline-flex;
  align-items: center;
  gap: 0.4rem;
  cursor: pointer;
}

.secondaryBtn {
  background: rgba(15, 23, 42, 0.6);
  border: 1px solid rgba(148, 163, 184, 0.35);
  color: #e5e7eb;
}

.primaryBtn {
  background: linear-gradient(135deg, #2563eb, #7c3aed);
  color: #fff;
  box-shadow: 0 18px 32px rgba(37, 99, 235, 0.35);
}

.infoBanner {
  padding: 0.75rem 1rem;
  border-radius: 0.85rem;
  background: rgba(37, 99, 235, 0.15);
  border: 1px solid rgba(37, 99, 235, 0.35);
  color: #bfdbfe;
}

.metricsRow {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(160px, 1fr));
  gap: 1rem;
}

.metricCard {
  padding: 1rem;
  border-radius: 1rem;
  background: rgba(15, 23, 42, 0.55);
  border: 1px solid rgba(148, 163, 184, 0.25);
  display: flex;
  flex-direction: column;
  gap: 0.35rem;
}

.metricLabel {
  font-size: 0.75rem;
  letter-spacing: 0.08em;
  text-transform: uppercase;
  color: rgba(148, 163, 184, 0.85);
}

.metricValue {
  font-size: 1.4rem;
  font-weight: 700;
  color: #f8fafc;
}

.metricSub {
  font-size: 0.8rem;
  color: rgba(148, 163, 184, 0.75);
}

.sidePanel {
  padding: 1rem;
  border-radius: 1rem;
  background: rgba(15, 23, 42, 0.55);
  border: 1px solid rgba(148, 163, 184, 0.25);
}

.sidePanel h3 {
  margin: 0 0 0.5rem;
  font-size: 1rem;
  color: #f8fafc;
}

.sidePanel ul {
  margin: 0;
  padding-left: 1.2rem;
  display: flex;
  flex-direction: column;
  gap: 0.35rem;
  color: rgba(203, 213, 225, 0.85);
}

.stateCard {
  padding: 1.5rem;
  border-radius: 1rem;
  background: rgba(15, 23, 42, 0.55);
  border: 1px solid rgba(148, 163, 184, 0.25);
  display: inline-flex;
  align-items: center;
  gap: 0.75rem;
  color: rgba(203, 213, 225, 0.85);
}

.emptyState {
  padding: 1.25rem;
  border-radius: 1rem;
  border: 1px dashed rgba(148, 163, 184, 0.35);
  color: rgba(148, 163, 184, 0.85);
  text-align: center;
}

.list {
  display: grid;
  gap: 1rem;
}

.card {
  padding: 1rem 1.25rem;
  border-radius: 1rem;
  background: rgba(15, 23, 42, 0.55);
  border: 1px solid rgba(148, 163, 184, 0.25);
}

.registrationMeta {
  display: flex;
  flex-wrap: wrap;
  align-items: center;
  gap: 0.5rem;
  margin-top: 0.4rem;
}

.statusBadge {
  display: inline-flex;
  align-items: center;
  gap: 0.4rem;
  padding: 0.25rem 0.6rem;
  border-radius: 999px;
  font-size: 0.75rem;
  font-weight: 600;
  text-transform: uppercase;
}

.badgeRegistered {
  background: rgba(34, 197, 94, 0.25);
  color: #bbf7d0;
}

.badgeWaitlisted {
  background: rgba(234, 179, 8, 0.25);
  color: #fde68a;
}

.badgeCheckedIn {
  background: rgba(59, 130, 246, 0.25);
  color: #bfdbfe;
}

.badgeWithdrawn {
  background: rgba(148, 163, 184, 0.25);
  color: rgba(226, 232, 240, 0.85);
}

.badgeDisqualified {
  background: rgba(248, 113, 113, 0.25);
  color: #fecaca;
}

.chipMuted {
  padding: 0.25rem 0.6rem;
  border-radius: 999px;
  background: rgba(148, 163, 184, 0.2);
  color: rgba(203, 213, 225, 0.85);
  font-size: 0.75rem;
}

.memberList {
  display: flex;
  flex-wrap: wrap;
  gap: 0.4rem;
  margin-top: 0.6rem;
}

.memberBadge {
  display: inline-flex;
  align-items: center;
  gap: 0.35rem;
  padding: 0.35rem 0.6rem;
  border-radius: 0.75rem;
  background: rgba(37, 99, 235, 0.18);
  color: #bfdbfe;
}

.memberContact {
  font-size: 0.7rem;
  color: rgba(191, 219, 254, 0.8);
}

.spin {
  animation: spin 1s linear infinite;
}

@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}
